package com.bookcab.demo;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/bookings")
public class BookingsController {
	
	@Autowired
	BookingsRepository bookingsRepository;
	
	@Autowired
	CabsRepository cabsRepository;
	
	@GetMapping("/all")
	public ResponseEntity<List<Booking>> getAllBooking(){
		try {
			List<Booking> allBookings = bookingsRepository.findAll();
			if(allBookings.isEmpty() || allBookings.size()==0) {
				return new ResponseEntity<List<Booking>>(HttpStatus.NO_CONTENT);
			}
			ResponseEntity<List<Booking>> responseEntityGetAllBookings = new ResponseEntity<>(allBookings,HttpStatus.OK);
			return responseEntityGetAllBookings;
		} catch (Exception e) {
			// TODO: handle exception
			return new ResponseEntity<List<Booking>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
	}
	
	@GetMapping("/addbooking/{cabId}")
	public ResponseEntity<Booking> AddBooking(@PathVariable("cabId") int cabId){
		try {
			
			Optional<Cab> selectedCabFromRepository = cabsRepository.findById(cabId);		
			
				
			if(selectedCabFromRepository.isEmpty()) {
				
				return new ResponseEntity<>(HttpStatus.NOT_FOUND);
			}
			
			Cab selectedCab = selectedCabFromRepository.get();
			
			Booking booking = new Booking();
						
			booking.setCab(selectedCab);
			
			Booking newBooking = bookingsRepository.save(booking);
			
			ResponseEntity<Booking> responseEntityAddBooking = new ResponseEntity<>(newBooking,HttpStatus.CREATED);
			
			return responseEntityAddBooking;
			
		} catch (Exception e) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		
	}

}
